name: Deploy to Core-Prod ECR

on:
  push:
     tags:        
      - '*'   

jobs:
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code and submodule
      uses: actions/checkout@v2
      with:
          submodules: 'true'
          token: ${{ secrets.TOKEN }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PROD_ECR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_ECR_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.ref_name }}
        APP_REPO: ${{ github.repository }}
        APP_REPO_OWNER: ${{ github.repository_owner }}
      run: |
        APP_NAME="${APP_REPO#$APP_REPO_OWNER/}"
        APP_NAME="${APP_NAME,,}"
        export ECR_REPOSITORY="${APP_NAME}"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:
    needs: build
    uses: OptiMargin-Software/k8s-optimargin/.github/workflows/automated_pr.yaml@main
    with:
      repository: ${{ github.repository }}
      repository_owner: ${{ github.repository_owner }}
      new_tag: ${{ github.ref_name }}
      image: ""
    secrets: inherit
